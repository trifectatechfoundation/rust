- // MIR for `loop_plus_match` before JumpThreading
+ // MIR for `loop_plus_match` after JumpThreading
  
  fn loop_plus_match() -> Option<u8> {
      let mut _0: std::option::Option<u8>;
      let mut _1: u8;
      let mut _2: ();
      let mut _3: !;
      let mut _4: !;
      let mut _5: !;
      let mut _6: !;
      scope 1 {
          debug state => _1;
      }
  
      bb0: {
          StorageLive(_1);
          _1 = const 1_u8;
-         goto -> bb1;
+         goto -> bb7;
      }
  
      bb1: {
-         switchInt(copy _1) -> [1: bb5, 2: bb4, 3: bb3, otherwise: bb2];
+         goto -> bb4;
      }
  
      bb2: {
          _0 = Option::<u8>::None;
          goto -> bb6;
      }
  
      bb3: {
          _0 = Option::<u8>::Some(const 42_u8);
          goto -> bb6;
      }
  
      bb4: {
          _1 = const 3_u8;
-         goto -> bb1;
+         goto -> bb8;
      }
  
      bb5: {
          _1 = const 2_u8;
          goto -> bb1;
      }
  
      bb6: {
          StorageDead(_1);
          return;
+     }
+ 
+     bb7: {
+         goto -> bb5;
+     }
+ 
+     bb8: {
+         goto -> bb3;
      }
  }
  
